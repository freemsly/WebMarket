//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebMarket.Model {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class na_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal na_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebMarket.Model.na.Resources", typeof(na_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Isbn, S3FolderName, HasImages from DigitalAsset.Product(NOLOCK) WHERE Region=&apos;NA&apos; AND ISBN IS NOT NULL AND S3FolderName IS NOT NULL AND S3FolderName NOT LIKE &apos;I%&apos;.
        /// </summary>
        public static string Ingestion_Images {
            get {
                return ResourceManager.GetString("Ingestion_Images", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ProductNumber, HasMarc, MARCFileName AS FileName FROM ProductMarc(NOLOCK)  WHERE Environment=&apos;na&apos;.
        /// </summary>
        public static string Ingestion_Marc {
            get {
                return ResourceManager.GetString("Ingestion_Marc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --SELECT FTD.ISBN AS Isbn, PL.LibraryID, COUNT(1) AS TotalCirculations 
        ///--FROM Oneclick.Holdings.PatronTitleTransactionTable(NOLOCK) PTT
        ///--INNER JOIN Oneclick.ProductCatalog.FullTitleDetails(NOLOCK) FTD
        ///--ON PTT.TitleId = FTD.Id
        ///--INNER JOIN Oneclick.dbo.PatronLibraries PL
        ///--ON PL.PatronID = PTT.PatronId
        ///--WHERE TransactionTypeId in(2,6) and TerminationTimestamp is NULL
        ///--GROUP BY FTD.Isbn, Pl.LibraryID
        ///--ORDER BY COUNT(1) DESC
        ///
        ///SELECT Isbn, PatronLibraryId AS LibraryId, Count(1) AS TotalCirculations 
        ///FROM [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OneClick_Circulation {
            get {
                return ResourceManager.GetString("OneClick_Circulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --SELECT 
        ///--      [Id]
        ///--      ,[SourceItemId] 
        ///--      ,[ISBN]           
        ///--      ,[HasImages]
        ///--      ,[S3FolderName]
        ///--      ,[ActivationTimeStamp]      
        ///--      ,[ReleaseDate]
        ///--      ,[PublicationDate]      
        ///--      ,[ScheduledReleaseDate]
        ///--      ,[PreReleaseDate]
        ///--      ,[IsPreRelease]
        ///--      ,COALESCE([Imprint],&apos;No Imprint&apos;) AS [Imprint]
        ///--      ,[PreviewFileName]
        ///--      ,[TargetAudience]
        ///--      ,[TitleTypeId]
        ///--      ,[DrmEnabled] as [HasDrm]
        ///--      ,[ActualDurationMinutes]
        ///--      ,[DeclaredD [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OneClick_Metadata {
            get {
                return ResourceManager.GetString("OneClick_Metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now Date = GETDATE()
        ///SELECT libraryId, Isbn, COUNT(1) AS TotalCopies
        ///FROM holding.LibraryIsbn    
        ///WHERE  BeginOn &lt;= @now AND (EndOn IS NULL OR EndOn &gt; @now) 
        ///AND (CircCap &lt; 0 OR CircCount &lt; CircCap) AND LibraryId &lt;&gt; 1062  
        ///GROUP BY libraryId,Isbn
        ///ORDER BY COUNT(1) DESC
        ///
        ///
        ///
        ///
        ///.
        /// </summary>
        public static string OneClick_Ownership {
            get {
                return ResourceManager.GetString("OneClick_Ownership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --SELECT DISTINCT ACS.Account_No AS AccountNo,
        ///--			SL.description AS SubscriptionName
        ///--			,SL.ISBN
        ///--			,SL.Job_No AS  SubscriptionId
        ///--			,OA.OneClickLibraryId AS LibraryId
        ///--            ,OA.EntityId                   
        ///--FROM acsuorders_summary ACS 
        ///--INNER JOIN acsuorder_lines(NOLOCK) AOL
        ///--ON ACS.order_no = AOL.order_no
        ///--LEFT JOIN dbo.stocklines(NOLOCK) SL ON SL.stock_no = AOL.Stock_No 
        ///--LEFT JOIN ORG.Account(NOLOCK) OA ON OA.AccountId = ACS.Account_No 
        ///--LEFT JOIN CUSTOMERS (Nolock) C ON  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OneClick_SubscriptionInfo {
            get {
                return ResourceManager.GetString("OneClick_SubscriptionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --SELECT FTD.ISBN AS Isbn, PL.LibraryId, COUNT(1) AS TotalHolds 
        ///--FROM Oneclick.Holdings.PatronTitleTransactionTable(NOLOCK) PTT
        ///--INNER JOIN ProductCatalog.FullTitleDetails(NOLOCK) FTD
        ///--ON PTT.TitleId = FTD.Id
        ///--INNER JOIN dbo.PatronLibraries PL
        ///--ON PL.PatronID = PTT.PatronId
        ///--WHERE TransactionTypeId=1 and TerminationTimestamp is NULL
        ///--GROUP BY FTD.Isbn, Pl.LibraryID
        ///--ORDER BY COUNT(1) DESC
        ///
        ///SELECT Isbn, PatronLibraryId AS LibraryId, Count(1) AS TotalHolds 
        ///FROM [DPCore].[holding].[PatronInterest](N [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OneClick_TotalHolds {
            get {
                return ResourceManager.GetString("OneClick_TotalHolds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now Date = GETDATE()
        ///SELECT libraryId, Isbn, EndOn,CircCap,CircCount
        ///FROM holding.LibraryIsbn(NOLOCK)    
        ///WHERE  EndOn IS NOT NULL AND EndOn &gt;= @now AND (CircCap &lt; 0 OR CircCount &lt; CircCap) AND LibraryId &lt;&gt; 1062  .
        /// </summary>
        public static string Platform_Expiration {
            get {
                return ResourceManager.GetString("Platform_Expiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Isbn, BundledItemNumber AS Id, TotalBundlePriceRnd AS Price, ItemNumber, TitleName AS Name 
        ///FROM  tm_bundledproducts BP INNER JOIN stocklines S
        ///ON BP.ItemNumber = S.Job_no and Isbn IS NOT NULL AND BP.status_code =&apos;Available&apos; AND BP.statusid=0 .
        /// </summary>
        public static string Source_Bundles {
            get {
                return ResourceManager.GetString("Source_Bundles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --SELECT e.ISBN, MAX(b.BlurbContent)
        ///--FROM dbo.stocklines AS s INNER JOIN dbo.tm_Edition AS e 
        ///--ON s.stock_no = e.Stock_No INNER JOIN dbo.tm_Blurb AS b 
        ///--ON e.TitleID = b.TitleID 
        ///--WHERE (b.BlurbTypeID = 12) 
        ///--AND (b.BlurbContent IS NOT NULL) AND (e.ISBN IS NOT NULL) AND e.ISBN &lt;&gt; &apos;&apos;
        ///--GROUP BY e.ISBN
        ///
        ///SELECT CAST(TItleId AS VARCHAR(10)) , BlurbContent FROM tm_Blurb WITH (NOLOCK) WHERE (BlurbTypeID = 12) 
        ///AND (BlurbContent IS NOT NULL) 
        ///
        ///
        ///.
        /// </summary>
        public static string Source_Description {
            get {
                return ResourceManager.GetString("Source_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Script for SelectTopNRows command from SSMS  ******/
        ///CREATE TABLE #Bisacs
        ///(
        ///	TitleId VARCHAR(10),
        ///	Genre varchar(8000),
        ///	[RANK] INT
        ///
        ///)
        ///INSERT INTO #Bisacs (TitleId, Genre,[RANK])
        ///SELECT CAST([TitleId] AS VARCHAR(10)),RBCODE,[RANK]
        ///FROM [Trilogy].[dbo].[tm_BisacCode]  BC
        ///INNER JOIN [dbo].[ARSYBisacCode] ABC
        ///ON BC.BisacCodeid = ABC.codeID
        ///
        ///SELECT [TitleId]
        ///	  ,Genre = STUFF((SELECT &apos;, &apos; + Genre
        ///           FROM #Bisacs b 
        ///           WHERE b.TitleId = b1.TitleId 
        ///		   order by [Rank]
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Genres {
            get {
                return ResourceManager.GetString("Source_Genres", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT t.[titleid] AS [TitleId]
        ///	,REPLACE(t.[title],CHAR(11),&apos;&apos;) AS [Title]
        ///	,REPLACE(t.[subtitle],CHAR(11),&apos;&apos;) AS [Subtitle]
        ///	,( SELECT CASE cn.ContributorTypeID WHEN 842 THEN &apos;author&apos; WHEN 906 THEN &apos;narrator&apos; END AS [@type],
        ///				cn.[Rank] AS [@order],
        ///				c.[forenames] AS [@fn],
        ///				c.[surname] AS [@ln],
        ///				c.[mail_name] AS [@mail],
        ///				c.[organisation] AS [@organisation]
        ///				FROM [dbo].[tm_Contributor](nolock) cn INNER JOIN [dbo].[Customers] c ON cn.account_no = c.account_no
        ///				WHERE cn.Title [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_MediaTitle_Merge {
            get {
                return ResourceManager.GetString("Source_MediaTitle_Merge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT TOP (100) PERCENT CASE cn.ContributorTypeID WHEN 842 THEN &apos;author&apos; WHEN 906 THEN &apos;narrator&apos; END AS contributorType, c.forenames AS FirstName, 
        ///                      c.surname AS LastName, c.mail_name AS MailName,c.[organisation] AS Organisation, cn.ContributorTypeID, convert(nvarchar(15),c.account_no) AS SourceId
        ///FROM         dbo.tm_Contributor(nolock) AS cn INNER JOIN
        ///                      dbo.customers(nolock) AS c ON cn.account_no = c.account_no
        ///WHERE     (cn.ContributorTypeID IN (906 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Narrator {
            get {
                return ResourceManager.GetString("Source_Narrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT AccountNo,OrderNo,InvoiceNo,EntityID,OrderDate,InvoiceDate,ItemNo,ISBN,OneclickLibraryID AS LibraryId,Quantity,NetAmount,[Format],OrderMethod 
        ///FROM [Trilogy].[dbo].[TrilogyPurchaseDetail](NOLOCK) WHERE OrderLineStatus IN (&apos;Completed&apos;).
        /// </summary>
        public static string Source_OrderHistory {
            get {
                return ResourceManager.GetString("Source_OrderHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT  OneclicklibraryId, EntityId FROM [Trilogy].Org.Account(NOLOCK) WHERE OneclicklibraryId IS NOT NULL AND EntityId IS NOT NULL
        ///	   
        ///SELECT DISTINCT TPD.EntityId,
        ///				ISBN AS Isbn,
        ///				SUM(ISNULL(Quantity,0)) AS TotalCopies,
        ///				&apos;&apos; AS SubscriptionName,
        ///				ISNULL(TPD.OneclickLibraryId,0) AS OneclickLibraryId
        ///FROM [Trilogy].[dbo].[TrilogyPurchaseDetail](NOLOCK) TPD
        ///WHERE TPD.EntityId IS NOT NULL AND ISBN IS NOT NULL AND OrderLineStatus &lt;&gt; &apos;Cancelled&apos; AND LOWER([Format]) NOT IN (&apos;ebook&apos;,&apos;eaudio&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Ownership {
            get {
                return ResourceManager.GetString("Source_Ownership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT s.isbn as [ISBN]
        ///	,&apos;USD&apos; As Currency
        ///	,s.selling_Price As ListPrice
        ///	,s.CoPub_Retail_Price AS RetailPrice	
        ///	,(SELECT TOP 1 USPromoPrice FROM [dbo].[PromoPricingDetail](nolock) PPD
        ///		INNER JOIN [dbo].[PromoPricingsummary](nolock) PPS
        ///		ON PPD.SummaryEntryId = PPS.Entry_Id
        ///		WHERE PPS.IsActive=1 AND PPD.Isactive=1 AND iscurrent=1 AND Isbn=s.isbn) AS DiscountPrice
        ///	FROM dbo.tm_Title AS t WITH (nolock) INNER JOIN
        ///         dbo.tm_Edition AS e WITH (nolock) ON t.TitleID = e.TitleID 
        ///		INNER JOIN  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Pricing {
            get {
                return ResourceManager.GetString("Source_Pricing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @publisher table (Name nvarchar(150), Label nvarchar(150), AccountNo nvarchar(12))
        ///
        ///insert into @publisher (Name,Label,AccountNo)	
        ///select distinct REPLACE(REPLACE([publisher],&apos; &amp; &apos;,&apos; and &apos;),&apos; Co.&apos;,&apos; Company&apos;), publisher, Publisher_Account_No FROM [dbo].[stocklines](nolock) where publisher is not null order by [publisher]
        ///
        ///
        ///  select G.Name, 
        ///	stuff( (Select &apos;,&apos; + convert(nvarchar(12),DN.AccountNo) 
        ///	from @publisher as DN where DN.Name = G.Name 
        ///	order by G.Name for xml path(&apos;&apos;) ),1,1, &apos;&apos;) as [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Publisher {
            get {
                return ResourceManager.GetString("Source_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT Isbn, Review FROM tm_titlereview WHERE IsActive = 1 .
        /// </summary>
        public static string Source_Review {
            get {
                return ResourceManager.GetString("Source_Review", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH CustomersCountryCode(CountryCode)
        ///AS
        ///(
        ///select distinct Nationality from customers WHERE Nationality IS NOT NULL AND type_code=&apos;Library&apos;
        ///)
        ///
        ///select DISTINCT
        ///    e.Isbn,
        ///    ER.CountryCode
        ///from tm_editionrights(NOLOCK) ER
        ///INNER JOIN dbo.tm_Edition AS e WITH (nolock) ON ER.EditionId = e.EditionId 
        ///INNER JOIN CustomersCountryCode CCC ON ER.CountryCode =  CCC.CountryCode
        ///WHERE IsActive=1 AND e.Isbn IS NOT NULL
        ///
        ///.
        /// </summary>
        public static string Source_SalesRights {
            get {
                return ResourceManager.GetString("Source_SalesRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @series table(Name nvarchar(150), Label nvarchar(150), AccountNo nvarchar(12), MaxInSeries int)
        ///
        ///insert into @series (Name,Label,AccountNo,MaxInSeries)
        ///
        ///SELECT Distinct(
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(	
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(
        ///		REPLACE(ast.[Series_Title],&apos;Carlisles&apos;&apos;&apos;,&apos;Carlisles&apos;)
        ///			,&apos;Do Not Disturb&apos;,&apos;Do Not Disturb&apos;) 
        ///			,&apos;Expecting!&apos;,&apos;Expecting&apos;)
        ///			,&apos;Mail-Order Bride&apos;,&apos;Mail Order Bride&apos;)
        ///			,&apos;Red-Hot Revenge&apos;,&apos;Red Hot Reve [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Series {
            get {
                return ResourceManager.GetString("Source_Series", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ----WITH QuarterlyTitles([COPClassID],[Title],[SeoTitle],[ReleaseYear],[Release],[ReleaseType], [Job_no])
        ///----AS (
        ///----SELECT 
        /// 
        ///----ce.[COPClassID],
        ///----((cast(ce.[ReleaseQuarter] AS NVARCHAR(10))
        ///----+CASE
        ///----WHEN ce.[ReleaseQuarter]%10=1 AND ce.[ReleaseQuarter]%100&lt;&gt;11 THEN &apos;st&apos;
        ///----WHEN ce.[ReleaseQuarter]%10=2 AND ce.[ReleaseQuarter]%100&lt;&gt;12 THEN &apos;nd&apos;
        ///----WHEN ce.[ReleaseQuarter]%10=3 AND ce.[ReleaseQuarter]%100&lt;&gt;13 THEN &apos;rd&apos;
        ///----ELSE &apos;th&apos;
        ///----END) + &apos; Quarter &apos; + cast(ce.[ReleaseYear] AS N [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_SOP {
            get {
                return ResourceManager.GetString("Source_SOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --DECLARE @subscription table
        ///--(
        ///--    Isbn varchar(25),
        ///--    SubscriptionName varchar(500),
        ///--	SubscriptionId varchar(25)
        ///--)
        ///--INSERT INTO @subscription
        ///--SELECT SL.JOB_NO As Id, SL.description AS Name, SL2.isbn As Isbn   
        ///--    FROM stocklines(NOLOCK) SL 	
        ///--	   INNER JOIN  Stoccomponent_stock(NOLOCK) SS on     SL.stock_no = SS.stock_no
        ///--	   INNER JOIN  stocklines(NOLOCK) SL2 on     SL2.stock_no = SS.associated_stock
        ///--	   WHERE  SL.Job_No LIKE &apos;SUBID%&apos;
        ///	   
        ///--SELECT * FROM @subscription	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Source_Subscription {
            get {
                return ResourceManager.GetString("Source_Subscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @subscription table
        ///(
        ///    Isbn varchar(25),
        ///    SubscriptionName varchar(500),
        ///	SubscriptionId varchar(25)
        ///)
        ///INSERT INTO @subscription
        ///SELECT SL.JOB_NO As Id, SL.description AS Name, SL2.isbn As Isbn   
        ///    FROM stocklines(NOLOCK) SL 	
        ///	   INNER JOIN  Stoccomponent_stock(NOLOCK) SS on     SL.stock_no = SS.stock_no
        ///	   INNER JOIN  stocklines(NOLOCK) SL2 on     SL2.stock_no = SS.associated_stock
        ///	   WHERE  SL.Job_No LIKE &apos;SUBID%&apos;
        ///	   
        ///SELECT * FROM @subscription	     
        ///
        ///
        ///
        ///
        ///.
        /// </summary>
        public static string Source_UsageTerms {
            get {
                return ResourceManager.GetString("Source_UsageTerms", resourceCulture);
            }
        }
    }
}
